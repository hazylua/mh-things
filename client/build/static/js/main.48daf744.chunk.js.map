{"version":3,"sources":["pages/FilterTable.jsx","pages/ArmorSetSearcher.jsx","services/AuthenticationService.js","services/Api.js","pages/Register.jsx","App.js","index.js"],"names":["onFirstDataRendered","params","api","sizeColumnsToFit","FilterTable","props","state","columnDefs","headerName","field","sortable","filter","rowData","filtered","fetch","then","response","json","rows","object","row_num","decos","skill","push","page","row","setState","e","this","toUpperCase","indexOf","target","value","className","Container","Col","style","height","width","map","name","React","Component","ArmorSetSearcher","useState","skills","skillsAdd","setSkills","setSkillsAdd","colDefs","useEffect","isSubscribed","Fragment","Row","onCellClicked","node","data","temp","index","splice","credentials","axios","create","baseURL","timeout","post","SendRequest","isSending","setIsSending","errorMsg","setErrorMsg","sendRequest","useCallback","a","AuthenticationService","email","password","pw","console","log","error","Button","variant","textAlign","dangerouslySetInnerHTML","__html","Register","userEmail","setUserEmail","userPassword","setUserPassword","Form","Group","Label","Control","label","type","placeholder","onChange","Text","tvalue","key","Navbar","to","Main","exact","path","component","Home","About","href","App","apiResponse","titles","document","title","Math","floor","random","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"yVAOMA,G,YAAsB,SAACC,GAC3BA,EAAOC,IAAIC,qBAuHEC,E,kDAnHb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,WAAY,CACV,CACEC,WAAY,aACZC,MAAO,OACPC,UAAU,EACVC,QAAQ,GAEV,CAAEH,WAAY,cAAeC,MAAO,OAAQC,UAAU,GACtD,CAAEF,WAAY,aAAcC,MAAO,MAAOC,UAAU,IAEtDE,QAAS,GACTC,SAAU,IAdK,E,gEAkBE,IAAD,OAClBC,MACE,wFAECC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACL,IADc,EACVC,EAAO,GADG,cAEKD,GAFL,IAEd,2BAAyB,CAAC,IAAD,EAAhBE,EAAgB,QACnBC,EAAU,EADS,cAELD,EAAOE,OAFF,IAEvB,2BAAgC,CAAC,IAAxBC,EAAuB,QAC9BJ,EAAKK,KAAK,CACRD,MAAOA,EACPE,KAAML,EAAOK,KACbC,IAAKL,IAEPA,GAAW,GARU,gCAFX,8BAcd,EAAKM,SAAS,CACZd,QAASM,EACTL,SAAUK,S,6CAKKS,GACrBC,KAAKF,SAAS,CACZb,SAAUe,KAAKtB,MAAMM,QAAQD,QAC3B,SAACW,GAAD,OACuE,IAArEA,EAAMA,MAAMO,cAAcC,QAAQH,EAAEI,OAAOC,MAAMH,sB,+BAMvD,OACE,6BACE,wBAAII,UAAU,cAAd,gBAQA,6BACE,kBAACC,EAAA,EAAD,CAAWD,UAAU,iCACnB,kBAACE,EAAA,EAAD,KACE,+CACA,yBACEF,UAAU,kBACVG,MAAO,CACLC,OAAQ,QACRC,MAAO,SAGT,kBAAC,cAAD,CACEtC,oBAAqBA,EACrBO,WAAYqB,KAAKtB,MAAMC,WACvBK,QAASgB,KAAKtB,MAAMO,SAAS0B,KAAI,SAACjB,GAChC,MAAO,CACLkB,KAAMlB,EAAMA,MACZE,KAAMF,EAAME,KACZC,IAAKH,EAAMG,mB,GAnFPgB,IAAMC,W,gBCJ1B1C,EAAsB,SAACC,GAC3BA,EAAOC,IAAIC,oBA2EEwC,EAxEU,WAAO,IAAD,EACDC,mBAAS,IADR,mBACtBC,EADsB,KACdC,EADc,OAEKF,mBAAS,IAFd,mBAEtBG,EAFsB,KAEXC,EAFW,KAIvBC,EAAU,CACd,CACEzC,WAAY,aACZC,MAAO,SAmBX,OATAyC,qBAAU,WACR,IAAIC,GAAe,EAKnB,OAHArC,MAAM,6BACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAWkC,EAAeL,EAAU7B,GAAQ,QAC7C,kBAAOkC,GAAe,KAC5B,IAGD,kBAAC,IAAMC,SAAP,KACE,wBAAInB,UAAU,cAAd,sBACA,kBAACC,EAAA,EAAD,CAAWD,UAAU,iCACnB,kBAACoB,EAAA,EAAD,KACE,kBAAClB,EAAA,EAAD,KACE,iGAGA,yBAAKF,UAAU,kBAAkBG,MAAO,CAAEC,OAAQ,UAChD,kBAAC,cAAD,CACErC,oBAAqBA,EACrBO,WAAY0C,EACZrC,QAASiC,EACTS,cAAe,SAACrD,IAC+B,IAAzC8C,EAAUjB,QAAQ7B,EAAOsD,KAAKC,OAChCR,GAAa,SAACD,GAAD,4BACRA,GADQ,CAEX9C,EAAOsD,KAAKC,eAMxB,kBAACrB,EAAA,EAAD,KACE,4EACA,yBAAKF,UAAU,kBAAkBG,MAAO,CAAEC,OAAQ,UAChD,kBAAC,cAAD,CACErC,oBAAqBA,EACrBO,WAAY0C,EACZrC,QAASmC,EACTO,cAAe,SAACrD,GACd,IAAIwD,EAAI,YAAOV,GACXW,EAAQD,EAAK3B,QAAQ7B,EAAOsD,KAAKC,MACrCC,EAAKE,OAAOD,EAAO,GACnBV,EAAaS,Y,kECtEhB,WACFG,GACL,OCDGC,IAAMC,OAAO,CAChBC,QAAS,yBACTC,QAAS,MDDIC,KAAK,YAAaL,IECjCM,EAAc,SAAC7D,GAAW,IAAD,IACKuC,oBAAS,GADd,mBACtBuB,EADsB,KACXC,EADW,OAEGxB,mBAAS,IAFZ,mBAEtByB,EAFsB,KAEZC,EAFY,KAGvBC,EAAcC,sBAAW,sBAAC,sBAAAC,EAAA,0DAC1BN,EAD0B,wDAE9BC,GAAa,GAFiB,kBAItBM,EAA+B,CACnCC,MAAOtE,EAAMsE,MACbC,SAAUvE,EAAMwE,KANU,OAQ5BP,EAAY,iCARgB,gDAU5BQ,QAAQC,IAAI1E,EAAMsE,MAAOtE,EAAMwE,IAC/BP,EAAY,KAAMtD,SAASwC,KAAKwB,OAXJ,QAa9BZ,GAAa,GAbiB,yDAc7B,CAACD,IAEJ,OACE,kBAAC,IAAMf,SAAP,KACE,kBAAC6B,EAAA,GAAD,GACEC,QAAQ,YADV,wBAEU,WAFV,qBAGO,UAHP,yBAIYf,GAJZ,wBAKWI,GALX,eASA,yBACEnC,MAAO,CAAE+C,UAAW,UACpBC,wBAAyB,CAAEC,OAAQhB,OAwE5BiB,EAlEE,WAAO,IAAD,EACW1C,mBAAS,IADpB,mBAChB2C,EADgB,KACLC,EADK,OAEiB5C,mBAAS,IAF1B,mBAEhB6C,EAFgB,KAEFC,EAFE,KAIrB,OACE,kBAACxD,EAAA,EAAD,CAAWD,UAAU,iCACnB,kBAACE,EAAA,EAAD,KACE,wBAAIF,UAAU,qBAAd,YACA,yIAIA,kBAAC0D,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,sBACA,kBAACF,EAAA,EAAKG,QAAN,CACEC,MAAM,QACNC,KAAK,QACLC,YAAY,4BACZC,SAAU,SAACvE,GAAD,OAAO6D,EAAcD,EAAY5D,EAAEI,OAAOC,UAEtD,kBAAC2D,EAAA,EAAKQ,KAAN,CAAWlE,UAAU,cAArB,mDAKF,kBAAC0D,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,iBACA,kBAACF,EAAA,EAAKG,QAAN,CACEM,OAAQX,EACRM,MAAM,WACNC,KAAK,WACLC,YAAY,sBACZC,SAAU,SAACvE,GAAD,OAAO+D,EAAiBD,EAAe9D,EAAEI,OAAOC,WAI9D,kBAAC,EAAD,CACE2C,MAAOY,EACPV,GAAIY,EACJY,IAAKd,OCvETe,G,MAAS,kBACb,6BACE,4BACE,4BACE,kBAAC,IAAD,CAAMrE,UAAU,cAAcsE,GAAG,eAAjC,SAIF,4BACE,kBAAC,IAAD,CAAMtE,UAAU,cAAcsE,GAAG,2BAAjC,gBAIF,4BACE,kBAAC,IAAD,CAAMtE,UAAU,cAAcsE,GAAG,kBAAjC,uBAIF,4BACE,kBAAC,IAAD,CAAMtE,UAAU,cAAcsE,GAAG,uBAAjC,aAIF,4BACE,kBAAC,IAAD,CAAMtE,UAAU,cAAcsE,GAAG,oBAAjC,cAQFC,EAAO,kBACX,8BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UAAWC,IAC1C,kBAAC,IAAD,CAAOF,KAAK,mBAAmBC,UAAWE,IAC1C,kBAAC,IAAD,CAAOH,KAAK,0BAA0BC,UAAWvG,IACjD,kBAAC,IAAD,CAAOsG,KAAK,iBAAiBC,UAAWhE,IACxC,kBAAC,IAAD,CAAO+D,KAAK,sBAAsBC,UAAWrB,OAK7CsB,EAAO,kBACX,6BACE,wBAAI3E,UAAU,cAAd,aACA,kBAACC,EAAA,EAAD,KACE,kBAACmB,EAAA,EAAD,KACE,kBAAClB,EAAA,EAAD,KACE,6BACE,6CACA,gIAIA,sOAQJ,kBAACA,EAAA,EAAD,KACE,qCACA,6BACE,gEACA,+BACE,+BACE,4BACE,4BACE,uBAAG2E,KAAK,qCAAR,uCAKJ,4BACE,4BACE,uBAAGA,KAAK,iCAAR,mCAKJ,4BACE,4BACE,uBAAGA,KAAK,sCAAR,gDAcdD,EAAQ,kBACZ,6BACE,wBAAI5E,UAAU,cAAd,SAEA,0GAIA,2BACE,uBAAG6E,KAAK,qCAAR,wCAoCSC,E,kDArBb,WAAY1G,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAE0G,YAAa,IAFX,E,gEAKjB,IAAMC,EAAS,CAAC,iBAChBC,SAASC,MAAQF,EAAOG,KAAKC,MAAMD,KAAKE,SAAWL,EAAOM,W,+BAI1D,OACE,kBAAC,IAAMnE,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GAfQX,IAAMC,WCxHxB8E,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFR,SAASS,eAAe,W","file":"static/js/main.48daf744.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container, Col } from \"react-bootstrap\";\r\n\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\r\n\r\nconst onFirstDataRendered = (params) => {\r\n  params.api.sizeColumnsToFit();\r\n};\r\n\r\nclass FilterTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnDefs: [\r\n        {\r\n          headerName: \"Skill Name\",\r\n          field: \"name\",\r\n          sortable: true,\r\n          filter: true,\r\n        },\r\n        { headerName: \"Page Number\", field: \"page\", sortable: true },\r\n        { headerName: \"Row Number\", field: \"row\", sortable: true },\r\n      ],\r\n      rowData: [],\r\n      filtered: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      \"https://raw.githubusercontent.com/yb00/mh-things/source/client/json/skill_pages.json\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        let rows = [];\r\n        for (let object of json) {\r\n          let row_num = 1;\r\n          for (let skill of object.decos) {\r\n            rows.push({\r\n              skill: skill,\r\n              page: object.page,\r\n              row: row_num,\r\n            });\r\n            row_num += 1;\r\n          }\r\n        }\r\n\r\n        this.setState({\r\n          rowData: rows,\r\n          filtered: rows,\r\n        });\r\n      });\r\n  }\r\n\r\n  onSkillInputTextChange(e) {\r\n    this.setState({\r\n      filtered: this.state.rowData.filter(\r\n        (skill) =>\r\n          skill.skill.toUpperCase().indexOf(e.target.value.toUpperCase()) !== -1\r\n      ),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"page-title\">Filter Table</h1>\r\n        {/* <input\r\n          id=\"skill-input\"\r\n          type=\"text\"\r\n          className=\"skill-input\"\r\n          placeholder=\"Skill Name\"\r\n          onChange={this.onSkillInputTextChange.bind(this)}\r\n        /> */}\r\n        <div>\r\n          <Container className=\"d-flex justify-content-center\">\r\n            <Col>\r\n              <p>For convenience.</p>\r\n              <div\r\n                className=\"ag-theme-balham\"\r\n                style={{\r\n                  height: \"250px\",\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                <AgGridReact\r\n                  onFirstDataRendered={onFirstDataRendered}\r\n                  columnDefs={this.state.columnDefs}\r\n                  rowData={this.state.filtered.map((skill) => {\r\n                    return {\r\n                      name: skill.skill,\r\n                      page: skill.page,\r\n                      row: skill.row,\r\n                    };\r\n                  })}\r\n                ></AgGridReact>\r\n              </div>\r\n            </Col>\r\n          </Container>\r\n        </div>\r\n        {/* <table className=\"skill-table\">\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: \"60%\" }}>Skill Name</th>\r\n              <th style={{ width: \"20%\" }}>Page Number</th>\r\n              <th style={{ width: \"20%\" }}>Row Number</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.filtered.map((skill) => {\r\n              return (\r\n                <tr>\r\n                  <td>{skill.skill}</td>\r\n                  <td>{skill.page}</td>\r\n                  <td>{skill.row}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\n\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\r\n\r\nconst onFirstDataRendered = (params) => {\r\n  params.api.sizeColumnsToFit();\r\n};\r\n\r\nconst ArmorSetSearcher = () => {\r\n  const [skills, skillsAdd] = useState([]);\r\n  const [setSkills, setSkillsAdd] = useState([]);\r\n\r\n  const colDefs = [\r\n    {\r\n      headerName: \"Skill Name\",\r\n      field: \"name\",\r\n    },\r\n  ];\r\n\r\n  const sampleData = [\r\n    { name: \"Critical Eye\" },\r\n    { name: \"Maximum Might\" },\r\n    { name: \"Agitator\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n\r\n    fetch(\"https://mhw-db.com/skills\")\r\n      .then((response) => response.json())\r\n      .then((json) => (isSubscribed ? skillsAdd(json) : null));\r\n    return () => (isSubscribed = false);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className=\"page-title\">Armor Set Searcher</h1>\r\n      <Container className=\"d-flex justify-content-center\">\r\n        <Row>\r\n          <Col>\r\n            <p>\r\n              Please choose the skills you want in your set from the list below:\r\n            </p>\r\n            <div className=\"ag-theme-balham\" style={{ height: \"250px\" }}>\r\n              <AgGridReact\r\n                onFirstDataRendered={onFirstDataRendered}\r\n                columnDefs={colDefs}\r\n                rowData={skills}\r\n                onCellClicked={(params) => {\r\n                  if (setSkills.indexOf(params.node.data) === -1)\r\n                    setSkillsAdd((setSkills) => [\r\n                      ...setSkills,\r\n                      params.node.data,\r\n                    ]);\r\n                }}\r\n              ></AgGridReact>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <p>Skills chosen. You can readjust their values:</p>\r\n            <div className=\"ag-theme-balham\" style={{ height: \"250px\" }}>\r\n              <AgGridReact\r\n                onFirstDataRendered={onFirstDataRendered}\r\n                columnDefs={colDefs}\r\n                rowData={setSkills}\r\n                onCellClicked={(params) => {\r\n                  var temp = [...setSkills];\r\n                  var index = temp.indexOf(params.node.data);\r\n                  temp.splice(index, 1);\r\n                  setSkillsAdd(temp);\r\n                }}\r\n              ></AgGridReact>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ArmorSetSearcher;\r\n","import Api from './Api'\r\n\r\nexport default {\r\n    register(credentials) {\r\n        return Api().post('/register', credentials)\r\n    }\r\n}","import axios from 'axios'\r\n\r\nexport default () => {\r\n    return axios.create({\r\n        baseURL: 'http://localhost:9000/',\r\n        timeout: 1000\r\n    })\r\n}","import React, { useState, useCallback } from \"react\";\r\nimport { Container, Form, Button, Col } from \"react-bootstrap\";\r\n\r\nimport AuthenticationService from \"../services/AuthenticationService\";\r\n\r\nconst SendRequest = (props) => {\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(``);\r\n  const sendRequest = useCallback(async () => {\r\n    if (isSending) return;\r\n    setIsSending(true);\r\n    try {\r\n      await AuthenticationService.register({\r\n        email: props.email,\r\n        password: props.pw,\r\n      });\r\n      setErrorMsg(`<p>Registration complete.</p>`);\r\n    } catch (error) {\r\n      console.log(props.email, props.pw);\r\n      setErrorMsg(error.response.data.error);\r\n    }\r\n    setIsSending(false);\r\n  }, [isSending]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button\r\n        variant=\"outlined\"\r\n        variant=\"primary\"\r\n        type=\"submit\"\r\n        disabled={isSending}\r\n        onClick={sendRequest}\r\n      >\r\n        Register\r\n      </Button>\r\n      <div\r\n        style={{ textAlign: \"center\" }}\r\n        dangerouslySetInnerHTML={{ __html: errorMsg }}\r\n      ></div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst Register = () => {\r\n  var [userEmail, setUserEmail] = useState(\"\");\r\n  var [userPassword, setUserPassword] = useState(\"\");\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center\">\r\n      <Col>\r\n        <h2 className=\"text-center mb-50\">Register</h2>\r\n        <p>\r\n          In the future you'll be able to register if you'd like to attach saved\r\n          sets and preferences to an account.\r\n        </p>\r\n        <Form.Group>\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter your e-mail address\"\r\n            onChange={(e) => setUserEmail((userEmail = e.target.value))}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            tvalue={userPassword}\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            onChange={(e) => setUserPassword((userPassword = e.target.value))}\r\n          />\r\n        </Form.Group>\r\n\r\n        <SendRequest\r\n          email={userEmail}\r\n          pw={userPassword}\r\n          key={userEmail}\r\n        ></SendRequest>\r\n      </Col>\r\n    </Container>\r\n  );\r\n};\r\n\r\n{\r\n  /* <TextField\r\n          value={userEmail}\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          onChange={(e) => setUserEmail((userEmail = e.target.value))}\r\n        />\r\n        <TextField\r\n          value={userPassword}\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          onChange={(e) => setUserPassword((userPassword = e.target.value))}\r\n        />\r\n        <SendRequest\r\n          email={userEmail}\r\n          pw={userPassword}\r\n          key={userEmail}\r\n        ></SendRequest> */\r\n}\r\n\r\nexport default Register;\r\n\r\n// export default class Register extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       userEmail: \"\",\r\n//       userPassword: \"\",\r\n//       errorMessage: ``,\r\n//     };\r\n//   }\r\n\r\n//   async registerUser() {\r\n//     try {\r\n//       await AuthenticationService.register({\r\n//         email: this.state.userEmail,\r\n//         password: this.state.userPassword,\r\n//       });\r\n//     } catch (error) {\r\n//       this.setState({\r\n//         errorMessage: error.response.data.error,\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   getUserName = (e) => {\r\n//     this.setState({\r\n//       userEmail: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   getUserPassword = (e) => {\r\n//     this.setState({\r\n//       userPassword: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <form noValidate autoCapitalize=\"off\">\r\n//           <TextField variant=\"filled\" />\r\n//         </form>\r\n//         <h1 className=\"page-title\">Register</h1>\r\n\r\n//         <input\r\n//           value={this.state.userName}\r\n//           className=\"register-input\"\r\n//           type=\"email\"\r\n//           onChange={this.getUserName}\r\n//         ></input>\r\n\r\n//         <input\r\n//           value={this.state.userPassword}\r\n//           className=\"register-input\"\r\n//           type=\"password\"\r\n//           onChange={this.getUserPassword}\r\n//         ></input>\r\n\r\n//         <button\r\n//           className=\"register-button\"\r\n//           onClick={this.registerUser.bind(this)}\r\n//         >\r\n//           Register\r\n//         </button>\r\n//         <div\r\n//           style={{ textAlign: \"center\", color: \"red\" }}\r\n//           dangerouslySetInnerHTML={{ __html: this.state.errorMessage }}\r\n//         ></div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport FilterTable from \"./pages/FilterTable\";\r\nimport ArmorSetSearcher from \"./pages/ArmorSetSearcher\";\r\nimport Register from \"./pages/Register\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst Navbar = () => (\r\n  <nav>\r\n    <ul>\r\n      <li>\r\n        <Link className=\"navbar-link\" to=\"/mh-things/\">\r\n          Home\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link className=\"navbar-link\" to=\"/mh-things/skill-filter\">\r\n          Filter Page\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link className=\"navbar-link\" to=\"/mh-things/ass\">\r\n          Armor Set Searcher\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link className=\"navbar-link\" to=\"/mh-things/register\">\r\n          Register\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link className=\"navbar-link\" to=\"/mh-things/about\">\r\n          About\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nconst Main = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route exact path=\"/mh-things\" component={Home} />\r\n      <Route path=\"/mh-things/about\" component={About} />\r\n      <Route path=\"/mh-things/skill-filter\" component={FilterTable} />\r\n      <Route path=\"/mh-things/ass\" component={ArmorSetSearcher} />\r\n      <Route path=\"/mh-things/register\" component={Register} />\r\n    </Switch>\r\n  </main>\r\n);\r\n\r\nconst Home = () => (\r\n  <div>\r\n    <h1 className=\"page-title\">Home Page</h1>\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <div>\r\n            <h5>What is this?</h5>\r\n            <p>\r\n              A webpage with a collection of assorted tools related to the game\r\n              Monster Hunter World: Iceborne.\r\n            </p>\r\n            <p>\r\n              At the moment the page is incomplete, but there's a filter page\r\n              that let's you find the location of a skill from the decoration\r\n              filter page. An armor set searcher is also planned to be\r\n              implemented.\r\n            </p>\r\n          </div>\r\n        </Col>\r\n        <Col>\r\n          <h5>Other</h5>\r\n          <div>\r\n            <p>Other websites you can check out:</p>\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <td>\r\n                    <a href=\"https://mhwleaderboards.com/rules\">\r\n                      https://mhwleaderboards.com/rules\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <a href=\"https://honeyhunterworld.com/\">\r\n                      https://honeyhunterworld.com/\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <a href=\"https://mhw.wiki-db.com/sim/?hl=en\">\r\n                      https://mhw.wiki-db.com/sim/?hl=en\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </div>\r\n);\r\n\r\nconst About = () => (\r\n  <div>\r\n    <h2 className=\"page-title\">About</h2>\r\n\r\n    <p>\r\n      If you want to take a look at how this page works go to it's repository\r\n      at:\r\n    </p>\r\n    <p>\r\n      <a href=\"https://github.com/yb00/mh-things\">\r\n        https://github.com/yb00/mh-things\r\n      </a>\r\n    </p>\r\n  </div>\r\n);\r\n\r\n// const App = () => (\r\n//   <Router>\r\n//     <Navbar />\r\n//     <Main />\r\n//   </Router>\r\n// )\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { apiResponse: \"\" };\r\n  }\r\n  componentDidMount() {\r\n    const titles = [\"MonHun Things\"];\r\n    document.title = titles[Math.floor(Math.random() * titles.length)];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Router>\r\n          <Navbar />\r\n          <Main />\r\n        </Router>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// Bootstrap\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// Scripts\r\nimport \"jquery/dist/jquery.js\";\r\nimport \"popper.js/dist/umd/popper.js\";\r\nimport \"bootstrap/dist/js/bootstrap.js\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}