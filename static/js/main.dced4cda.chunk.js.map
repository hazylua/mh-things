{"version":3,"sources":["pages/FilterTable.jsx","pages/ArmorSetSearcher.jsx","services/AuthenticationService.js","services/Api.js","pages/Register.jsx","App.js","index.js"],"names":["onFirstDataRendered","params","api","sizeColumnsToFit","FilterTable","props","state","columnDefs","headerName","field","sortable","filter","rowData","filtered","fetch","then","response","json","rows","object","row_num","decos","skill","push","page","row","setState","e","this","toUpperCase","indexOf","target","value","className","Container","Col","style","height","width","map","name","React","Component","ArmorSetSearcher","useState","skills","skillsAdd","setSkills","setSkillsAdd","colDefs","useEffect","isSubscribed","Fragment","Row","onCellClicked","node","data","temp","index","splice","credentials","axios","create","baseURL","timeout","post","SendRequest","isSending","setIsSending","errorMsg","setErrorMsg","sendRequest","useCallback","a","AuthenticationService","email","password","pw","console","log","error","Button","variant","textAlign","dangerouslySetInnerHTML","__html","Register","userEmail","setUserEmail","userPassword","setUserPassword","Form","Group","Label","Control","label","type","placeholder","onChange","Text","tvalue","key","Navbar","to","Main","exact","path","component","Home","About","href","App","apiResponse","titles","document","title","Math","floor","random","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dced4cda.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container, Col } from \"react-bootstrap\";\n\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\n\nconst onFirstDataRendered = (params) => {\n  params.api.sizeColumnsToFit();\n};\n\nclass FilterTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columnDefs: [\n        {\n          headerName: \"Skill Name\",\n          field: \"name\",\n          sortable: true,\n          filter: true,\n        },\n        { headerName: \"Page Number\", field: \"page\", sortable: true },\n        { headerName: \"Row Number\", field: \"row\", sortable: true },\n      ],\n      rowData: [],\n      filtered: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(\n      \"https://raw.githubusercontent.com/yb00/mh-things/source/client/json/skill_pages.json\"\n    )\n      .then((response) => response.json())\n      .then((json) => {\n        let rows = [];\n        for (let object of json) {\n          let row_num = 1;\n          for (let skill of object.decos) {\n            rows.push({\n              skill: skill,\n              page: object.page,\n              row: row_num,\n            });\n            row_num += 1;\n          }\n        }\n\n        this.setState({\n          rowData: rows,\n          filtered: rows,\n        });\n      });\n  }\n\n  onSkillInputTextChange(e) {\n    this.setState({\n      filtered: this.state.rowData.filter(\n        (skill) =>\n          skill.skill.toUpperCase().indexOf(e.target.value.toUpperCase()) !== -1\n      ),\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"page-title\">Filter Table</h1>\n        {/* <input\n          id=\"skill-input\"\n          type=\"text\"\n          className=\"skill-input\"\n          placeholder=\"Skill Name\"\n          onChange={this.onSkillInputTextChange.bind(this)}\n        /> */}\n        <div>\n          <Container className=\"d-flex justify-content-center\">\n            <Col>\n              <p>For convenience.</p>\n              <div\n                className=\"ag-theme-balham\"\n                style={{\n                  height: \"250px\",\n                  width: \"100%\",\n                }}\n              >\n                <AgGridReact\n                  onFirstDataRendered={onFirstDataRendered}\n                  columnDefs={this.state.columnDefs}\n                  rowData={this.state.filtered.map((skill) => {\n                    return {\n                      name: skill.skill,\n                      page: skill.page,\n                      row: skill.row,\n                    };\n                  })}\n                ></AgGridReact>\n              </div>\n            </Col>\n          </Container>\n        </div>\n        {/* <table className=\"skill-table\">\n          <thead>\n            <tr>\n              <th style={{ width: \"60%\" }}>Skill Name</th>\n              <th style={{ width: \"20%\" }}>Page Number</th>\n              <th style={{ width: \"20%\" }}>Row Number</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.filtered.map((skill) => {\n              return (\n                <tr>\n                  <td>{skill.skill}</td>\n                  <td>{skill.page}</td>\n                  <td>{skill.row}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table> */}\n      </div>\n    );\n  }\n}\n\nexport default FilterTable;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Col, Row } from \"react-bootstrap\";\n\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\n\nconst onFirstDataRendered = (params) => {\n  params.api.sizeColumnsToFit();\n};\n\nconst ArmorSetSearcher = () => {\n  const [skills, skillsAdd] = useState([]);\n  const [setSkills, setSkillsAdd] = useState([]);\n\n  const colDefs = [\n    {\n      headerName: \"Skill Name\",\n      field: \"name\",\n    },\n  ];\n\n  const sampleData = [\n    { name: \"Critical Eye\" },\n    { name: \"Maximum Might\" },\n    { name: \"Agitator\" },\n  ];\n\n  useEffect(() => {\n    let isSubscribed = true;\n\n    fetch(\"https://mhw-db.com/skills\")\n      .then((response) => response.json())\n      .then((json) => (isSubscribed ? skillsAdd(json) : null));\n    return () => (isSubscribed = false);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <h1 className=\"page-title\">Armor Set Searcher</h1>\n      <Container className=\"d-flex justify-content-center\">\n        <Row>\n          <Col>\n            <p>\n              Please choose the skills you want in your set from the list below:\n            </p>\n            <div className=\"ag-theme-balham\" style={{ height: \"250px\" }}>\n              <AgGridReact\n                onFirstDataRendered={onFirstDataRendered}\n                columnDefs={colDefs}\n                rowData={skills}\n                onCellClicked={(params) => {\n                  if (setSkills.indexOf(params.node.data) === -1)\n                    setSkillsAdd((setSkills) => [\n                      ...setSkills,\n                      params.node.data,\n                    ]);\n                }}\n              ></AgGridReact>\n            </div>\n          </Col>\n          <Col>\n            <p>Skills chosen. You can readjust their values:</p>\n            <div className=\"ag-theme-balham\" style={{ height: \"250px\" }}>\n              <AgGridReact\n                onFirstDataRendered={onFirstDataRendered}\n                columnDefs={colDefs}\n                rowData={setSkills}\n                onCellClicked={(params) => {\n                  var temp = [...setSkills];\n                  var index = temp.indexOf(params.node.data);\n                  temp.splice(index, 1);\n                  setSkillsAdd(temp);\n                }}\n              ></AgGridReact>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default ArmorSetSearcher;\n","import Api from './Api'\n\nexport default {\n    register(credentials) {\n        return Api().post('/register', credentials)\n    }\n}","import axios from 'axios'\n\nexport default () => {\n    return axios.create({\n        baseURL: 'http://localhost:9000/',\n        timeout: 1000\n    })\n}","import React, { useState, useCallback } from \"react\";\nimport { Container, Form, Button, Col } from \"react-bootstrap\";\n\nimport AuthenticationService from \"../services/AuthenticationService\";\n\nconst SendRequest = (props) => {\n  const [isSending, setIsSending] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(``);\n  const sendRequest = useCallback(async () => {\n    if (isSending) return;\n    setIsSending(true);\n    try {\n      await AuthenticationService.register({\n        email: props.email,\n        password: props.pw,\n      });\n      setErrorMsg(`<p>Registration complete.</p>`);\n    } catch (error) {\n      console.log(props.email, props.pw);\n      setErrorMsg(error.response.data.error);\n    }\n    setIsSending(false);\n  }, [isSending]);\n\n  return (\n    <React.Fragment>\n      <Button\n        variant=\"outlined\"\n        variant=\"primary\"\n        type=\"submit\"\n        disabled={isSending}\n        onClick={sendRequest}\n      >\n        Register\n      </Button>\n      <div\n        style={{ textAlign: \"center\" }}\n        dangerouslySetInnerHTML={{ __html: errorMsg }}\n      ></div>\n    </React.Fragment>\n  );\n};\n\nconst Register = () => {\n  var [userEmail, setUserEmail] = useState(\"\");\n  var [userPassword, setUserPassword] = useState(\"\");\n\n  return (\n    <Container className=\"d-flex justify-content-center\">\n      <Col>\n        <h2 className=\"text-center mb-50\">Register</h2>\n        <p>\n          In the future you'll be able to register if you'd like to attach saved\n          sets and preferences to an account.\n        </p>\n        <Form.Group>\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            label=\"Email\"\n            type=\"email\"\n            placeholder=\"Enter your e-mail address\"\n            onChange={(e) => setUserEmail((userEmail = e.target.value))}\n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            tvalue={userPassword}\n            label=\"Password\"\n            type=\"password\"\n            placeholder=\"Enter your password\"\n            onChange={(e) => setUserPassword((userPassword = e.target.value))}\n          />\n        </Form.Group>\n\n        <SendRequest\n          email={userEmail}\n          pw={userPassword}\n          key={userEmail}\n        ></SendRequest>\n      </Col>\n    </Container>\n  );\n};\n\n{\n  /* <TextField\n          value={userEmail}\n          label=\"Email\"\n          type=\"email\"\n          onChange={(e) => setUserEmail((userEmail = e.target.value))}\n        />\n        <TextField\n          value={userPassword}\n          label=\"Password\"\n          type=\"password\"\n          onChange={(e) => setUserPassword((userPassword = e.target.value))}\n        />\n        <SendRequest\n          email={userEmail}\n          pw={userPassword}\n          key={userEmail}\n        ></SendRequest> */\n}\n\nexport default Register;\n\n// export default class Register extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       userEmail: \"\",\n//       userPassword: \"\",\n//       errorMessage: ``,\n//     };\n//   }\n\n//   async registerUser() {\n//     try {\n//       await AuthenticationService.register({\n//         email: this.state.userEmail,\n//         password: this.state.userPassword,\n//       });\n//     } catch (error) {\n//       this.setState({\n//         errorMessage: error.response.data.error,\n//       });\n//     }\n//   }\n\n//   getUserName = (e) => {\n//     this.setState({\n//       userEmail: e.target.value,\n//     });\n//   };\n\n//   getUserPassword = (e) => {\n//     this.setState({\n//       userPassword: e.target.value,\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <div>\n//         <form noValidate autoCapitalize=\"off\">\n//           <TextField variant=\"filled\" />\n//         </form>\n//         <h1 className=\"page-title\">Register</h1>\n\n//         <input\n//           value={this.state.userName}\n//           className=\"register-input\"\n//           type=\"email\"\n//           onChange={this.getUserName}\n//         ></input>\n\n//         <input\n//           value={this.state.userPassword}\n//           className=\"register-input\"\n//           type=\"password\"\n//           onChange={this.getUserPassword}\n//         ></input>\n\n//         <button\n//           className=\"register-button\"\n//           onClick={this.registerUser.bind(this)}\n//         >\n//           Register\n//         </button>\n//         <div\n//           style={{ textAlign: \"center\", color: \"red\" }}\n//           dangerouslySetInnerHTML={{ __html: this.state.errorMessage }}\n//         ></div>\n//       </div>\n//     );\n//   }\n// }\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport FilterTable from \"./pages/FilterTable\";\nimport ArmorSetSearcher from \"./pages/ArmorSetSearcher\";\nimport Register from \"./pages/Register\";\n\nimport \"./App.css\";\n\nconst Navbar = () => (\n  <nav>\n    <ul>\n      <li>\n        <Link className=\"navbar-link\" to=\"/mh-things/\">\n          Home\n        </Link>\n      </li>\n      <li>\n        <Link className=\"navbar-link\" to=\"/mh-things/skill-filter\">\n          Filter Page\n        </Link>\n      </li>\n      <li>\n        <Link className=\"navbar-link\" to=\"/mh-things/ass\">\n          Armor Set Searcher\n        </Link>\n      </li>\n      <li>\n        <Link className=\"navbar-link\" to=\"/mh-things/register\">\n          Register\n        </Link>\n      </li>\n      <li>\n        <Link className=\"navbar-link\" to=\"/mh-things/about\">\n          About\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path=\"/mh-things\" component={Home} />\n      <Route path=\"/mh-things/about\" component={About} />\n      <Route path=\"/mh-things/skill-filter\" component={FilterTable} />\n      <Route path=\"/mh-things/ass\" component={ArmorSetSearcher} />\n      <Route path=\"/mh-things/register\" component={Register} />\n    </Switch>\n  </main>\n);\n\nconst Home = () => (\n  <div>\n    <h1 className=\"page-title\">Home Page</h1>\n    <Container>\n      <Row>\n        <Col>\n          <div>\n            <h5>What is this?</h5>\n            <p>\n              A webpage with a collection of assorted tools related to the game\n              Monster Hunter World: Iceborne.\n            </p>\n            <p>\n              At the moment the page is incomplete, but there's a filter page\n              that let's you find the location of a skill from the decoration\n              filter page. An armor set searcher is also planned to be\n              implemented.\n            </p>\n          </div>\n        </Col>\n        <Col>\n          <h5>Other</h5>\n          <div>\n            <p>Other websites you can check out:</p>\n            <table>\n              <tbody>\n                <tr>\n                  <td>\n                    <a href=\"https://mhwleaderboards.com/rules\">\n                      https://mhwleaderboards.com/rules\n                    </a>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <a href=\"https://honeyhunterworld.com/\">\n                      https://honeyhunterworld.com/\n                    </a>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <a href=\"https://mhw.wiki-db.com/sim/?hl=en\">\n                      https://mhw.wiki-db.com/sim/?hl=en\n                    </a>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  </div>\n);\n\nconst About = () => (\n  <div>\n    <h2 className=\"page-title\">About</h2>\n\n    <p>\n      If you want to take a look at how this page works go to it's repository\n      at:\n    </p>\n    <p>\n      <a href=\"https://github.com/yb00/mh-things\">\n        https://github.com/yb00/mh-things\n      </a>\n    </p>\n  </div>\n);\n\n// const App = () => (\n//   <Router>\n//     <Navbar />\n//     <Main />\n//   </Router>\n// )\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { apiResponse: \"\" };\n  }\n  componentDidMount() {\n    const titles = [\"MonHun Things\"];\n    document.title = titles[Math.floor(Math.random() * titles.length)];\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Router>\n          <Navbar />\n          <Main />\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// Bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// Scripts\nimport \"jquery/dist/jquery.js\";\nimport \"popper.js/dist/umd/popper.js\";\nimport \"bootstrap/dist/js/bootstrap.js\";\n\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}