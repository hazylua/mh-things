{"version":3,"sources":["pages/FilterTable.jsx","pages/ArmorSetSearcher.jsx","services/AuthenticationService.js","services/Api.js","pages/Register.jsx","App.js","index.js"],"names":["onFirstDataRendered","params","api","sizeColumnsToFit","FilterTable","props","state","columnDefs","headerName","field","sortable","rowData","filtered","fetch","then","response","json","rows","object","row_num","decos","skill","push","page","row","setState","e","this","filter","toUpperCase","indexOf","target","value","Container","Col","Form","InputGroup","Prepend","Text","className","FormControl","id","type","placeholder","onChange","onSkillInputTextChange","bind","size","style","height","width","map","name","React","Component","ArmorSetSearcher","useState","skills","skillsAdd","setSkills","setSkillsAdd","addFiltered","colDefs","useEffect","isSubscribed","Row","marginBottom","temp","onCellClicked","node","data","index","splice","credentials","axios","create","baseURL","timeout","post","SendRequest","isSending","setIsSending","errorMsg","setErrorMsg","sendRequest","useCallback","a","AuthenticationService","email","password","pw","error","Fragment","Button","variant","disabled","onClick","textAlign","dangerouslySetInnerHTML","__html","Register","userEmail","setUserEmail","userPassword","setUserPassword","Group","Label","Control","label","tvalue","key","Navbar","display","alignItems","textDecoration","to","activeClassName","exact","Main","path","component","Home","About","marginRight","marginLeft","href","App","apiResponse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.351396e3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container, Col, Form, InputGroup, FormControl } from \"react-bootstrap\";\r\n\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-alpine-dark.css\";\r\n\r\nconst onFirstDataRendered = (params) => {\r\n  params.api.sizeColumnsToFit();\r\n};\r\n\r\nclass FilterTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnDefs: [\r\n        {\r\n          headerName: \"Skill Name\",\r\n          field: \"name\",\r\n          sortable: true,\r\n        },\r\n        { headerName: \"Page Number\", field: \"page\", sortable: true },\r\n        { headerName: \"Row Number\", field: \"row\", sortable: true },\r\n      ],\r\n      rowData: [],\r\n      filtered: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      \"https://raw.githubusercontent.com/yb00/mh-things/source/client/json/skill_pages.json\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        let rows = [];\r\n        for (let object of json) {\r\n          let row_num = 1;\r\n          for (let skill of object.decos) {\r\n            rows.push({\r\n              skill: skill,\r\n              page: object.page,\r\n              row: row_num,\r\n            });\r\n            row_num += 1;\r\n          }\r\n        }\r\n\r\n        this.setState({\r\n          rowData: rows,\r\n          filtered: rows,\r\n        });\r\n      });\r\n  }\r\n\r\n  onSkillInputTextChange(e) {\r\n    this.setState({\r\n      filtered: this.state.rowData.filter(\r\n        (skill) =>\r\n          skill.skill.toUpperCase().indexOf(e.target.value.toUpperCase()) !== -1\r\n      ),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Col>\r\n          <h2>Filter Table</h2>\r\n          <p>For convenience.</p>\r\n          <Form>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <i className=\"fa fa-search\"></i>\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                id=\"skill-input\"\r\n                type=\"text\"\r\n                className=\"input-group-text justify-content-center\"\r\n                placeholder=\"Skill Name\"\r\n                onChange={this.onSkillInputTextChange.bind(this)}\r\n                size=\"lg\"\r\n                type=\"text\"\r\n                placeholder=\"Skill name\"\r\n              ></FormControl>\r\n            </InputGroup>\r\n          </Form>\r\n          <div\r\n            className=\"ag-theme-alpine-dark\"\r\n            style={{\r\n              height: \"1000px\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <AgGridReact\r\n              onFirstDataRendered={onFirstDataRendered}\r\n              columnDefs={this.state.columnDefs}\r\n              rowData={this.state.filtered.map((skill) => {\r\n                return {\r\n                  name: skill.skill,\r\n                  page: skill.page,\r\n                  row: skill.row,\r\n                };\r\n              })}\r\n            ></AgGridReact>\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  FormControl,\r\n  InputGroup,\r\n} from \"react-bootstrap\";\r\n\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-alpine-dark.css\";\r\n\r\nconst onFirstDataRendered = (params) => {\r\n  params.api.sizeColumnsToFit();\r\n};\r\n\r\nconst ArmorSetSearcher = () => {\r\n  const [skills, skillsAdd] = useState([]);\r\n  const [setSkills, setSkillsAdd] = useState([]);\r\n  const [filtered, addFiltered] = useState([]);\r\n\r\n  const colDefs = [\r\n    {\r\n      headerName: \"Skill Name\",\r\n      field: \"name\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n\r\n    fetch(\"https://mhw-db.com/skills\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        if (isSubscribed) {\r\n          skillsAdd(json);\r\n          addFiltered(json);\r\n        } else {\r\n          return null;\r\n        }\r\n      });\r\n    return () => (isSubscribed = false);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Row style={{ marginBottom: \"20px\" }}>\r\n        <Col>\r\n          <h2>Armor Set Searcher</h2>\r\n          <p>\r\n            Please choose the skills you want in your set from the list below:\r\n          </p>\r\n          <Form>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <i className=\"fa fa-search\"></i>\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                id=\"skill-input\"\r\n                type=\"text\"\r\n                className=\"input-group-text justify-content-center\"\r\n                placeholder=\"Skill Name\"\r\n                onChange={(params) => {\r\n                  var temp = skills.filter(\r\n                    (skill) =>\r\n                      skill.name\r\n                        .toUpperCase()\r\n                        .indexOf(params.target.value.toUpperCase()) !== -1\r\n                  );\r\n                  addFiltered(temp);\r\n                }}\r\n                type=\"text\"\r\n                placeholder=\"Skill name\"\r\n              ></FormControl>\r\n            </InputGroup>\r\n          </Form>\r\n          <div className=\"ag-theme-alpine-dark\" style={{ height: \"500px\" }}>\r\n            <AgGridReact\r\n              onFirstDataRendered={onFirstDataRendered}\r\n              columnDefs={colDefs}\r\n              rowData={filtered}\r\n              onCellClicked={(params) => {\r\n                if (setSkills.indexOf(params.node.data) === -1)\r\n                  setSkillsAdd((setSkills) => [...setSkills, params.node.data]);\r\n              }}\r\n            ></AgGridReact>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <p>Chosen skills:</p>\r\n          <div className=\"ag-theme-alpine-dark\" style={{ height: \"500px\" }}>\r\n            <AgGridReact\r\n              onFirstDataRendered={onFirstDataRendered}\r\n              columnDefs={colDefs}\r\n              rowData={setSkills}\r\n              onCellClicked={(params) => {\r\n                var temp = [...setSkills];\r\n                var index = temp.indexOf(params.node.data);\r\n                temp.splice(index, 1);\r\n                setSkillsAdd(temp);\r\n              }}\r\n            ></AgGridReact>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ArmorSetSearcher;\r\n","import Api from './Api'\r\n\r\nexport default {\r\n    register(credentials) {\r\n        return Api().post('/register', credentials)\r\n    }\r\n}","import axios from 'axios'\r\n\r\nexport default () => {\r\n    return axios.create({\r\n        baseURL: 'http://localhost:9000/',\r\n        timeout: 1000\r\n    })\r\n}","import React, { useState, useCallback } from \"react\";\r\nimport { Container, Form, Button, Col } from \"react-bootstrap\";\r\n\r\nimport AuthenticationService from \"../services/AuthenticationService\";\r\n\r\nconst SendRequest = (props) => {\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(``);\r\n  const sendRequest = useCallback(async () => {\r\n    if (isSending) return;\r\n    setIsSending(true);\r\n    try {\r\n      await AuthenticationService.register({\r\n        email: props.email,\r\n        password: props.pw,\r\n      });\r\n      setErrorMsg(`<p>Registration complete.</p>`);\r\n    } catch (error) {\r\n      setErrorMsg(error.response.data.error);\r\n      setIsSending(false);\r\n    }\r\n    setIsSending(false);\r\n  }, [isSending]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button\r\n        variant=\"primary\"\r\n        type=\"submit\"\r\n        disabled={isSending}\r\n        onClick={sendRequest}\r\n      >\r\n        Register\r\n      </Button>\r\n      <div\r\n        style={{ textAlign: \"center\" }}\r\n        dangerouslySetInnerHTML={{ __html: errorMsg }}\r\n      ></div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst Register = () => {\r\n  var [userEmail, setUserEmail] = useState(\"\");\r\n  var [userPassword, setUserPassword] = useState(\"\");\r\n\r\n  return (\r\n    <Container>\r\n      <Col>\r\n        <h2>Register</h2>\r\n        <p>\r\n          In the future you'll be able to register if you'd like to attach saved\r\n          sets and preferences to an account.\r\n        </p>\r\n        <Form.Group>\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter your e-mail address\"\r\n            onChange={(e) => setUserEmail((userEmail = e.target.value))}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            tvalue={userPassword}\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            onChange={(e) => setUserPassword((userPassword = e.target.value))}\r\n          />\r\n        </Form.Group>\r\n\r\n        <SendRequest\r\n          email={userEmail}\r\n          pw={userPassword}\r\n          key={userEmail}\r\n        ></SendRequest>\r\n      </Col>\r\n    </Container>\r\n  );\r\n};\r\n\r\n/* <TextField\r\n          value={userEmail}\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          onChange={(e) => setUserEmail((userEmail = e.target.value))}\r\n        />\r\n        <TextField\r\n          value={userPassword}\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          onChange={(e) => setUserPassword((userPassword = e.target.value))}\r\n        />\r\n        <SendRequest\r\n          email={userEmail}\r\n          pw={userPassword}\r\n          key={userEmail}\r\n        ></SendRequest> */\r\n\r\nexport default Register;\r\n\r\n// export default class Register extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       userEmail: \"\",\r\n//       userPassword: \"\",\r\n//       errorMessage: ``,\r\n//     };\r\n//   }\r\n\r\n//   async registerUser() {\r\n//     try {\r\n//       await AuthenticationService.register({\r\n//         email: this.state.userEmail,\r\n//         password: this.state.userPassword,\r\n//       });\r\n//     } catch (error) {\r\n//       this.setState({\r\n//         errorMessage: error.response.data.error,\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   getUserName = (e) => {\r\n//     this.setState({\r\n//       userEmail: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   getUserPassword = (e) => {\r\n//     this.setState({\r\n//       userPassword: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <form noValidate autoCapitalize=\"off\">\r\n//           <TextField variant=\"filled\" />\r\n//         </form>\r\n//         <h1 className=\"page-title\">Register</h1>\r\n\r\n//         <input\r\n//           value={this.state.userName}\r\n//           className=\"register-input\"\r\n//           type=\"email\"\r\n//           onChange={this.getUserName}\r\n//         ></input>\r\n\r\n//         <input\r\n//           value={this.state.userPassword}\r\n//           className=\"register-input\"\r\n//           type=\"password\"\r\n//           onChange={this.getUserPassword}\r\n//         ></input>\r\n\r\n//         <button\r\n//           className=\"register-button\"\r\n//           onClick={this.registerUser.bind(this)}\r\n//         >\r\n//           Register\r\n//         </button>\r\n//         <div\r\n//           style={{ textAlign: \"center\", color: \"red\" }}\r\n//           dangerouslySetInnerHTML={{ __html: this.state.errorMessage }}\r\n//         ></div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, NavLink } from \"react-router-dom\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport FilterTable from \"./pages/FilterTable\";\r\nimport ArmorSetSearcher from \"./pages/ArmorSetSearcher\";\r\nimport Register from \"./pages/Register\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst Navbar = () => (\r\n  <div className=\"header\">\r\n    <div className=\"header-title\"\r\n    >\r\n      <NavLink\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          textDecoration: \"none\",\r\n        }}\r\n        to=\"/mh-things\"\r\n      >\r\n        <h1>MH_THINGS</h1>\r\n      </NavLink>\r\n    </div>\r\n    <nav className=\"header-nav\">\r\n      <ul>\r\n        <li>\r\n          <NavLink className=\"navbar-link\" activeClassName=\"navbar-link-active\" exact to=\"/mh-things\">\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink className=\"navbar-link\" activeClassName=\"navbar-link-active\" to=\"/mh-things/skill-filter\">\r\n            Filter Page\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink className=\"navbar-link\" activeClassName=\"navbar-link-active\" to=\"/mh-things/ass\">\r\n            Armor Set Searcher\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink className=\"navbar-link\" activeClassName=\"navbar-link-active\" to=\"/mh-things/register\">\r\n            Register\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink className=\"navbar-link\" activeClassName=\"navbar-link-active\" to=\"/mh-things/about\">\r\n            About\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n);\r\n\r\nconst Main = () => (\r\n  <div>\r\n    <Switch>\r\n      <Route exact path=\"/mh-things\" component={Home} />\r\n      <Route path=\"/mh-things/about\" component={About} />\r\n      <Route path=\"/mh-things/skill-filter\" component={FilterTable} />\r\n      <Route path=\"/mh-things/ass\" component={ArmorSetSearcher} />\r\n      <Route path=\"/mh-things/register\" component={Register} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nconst Home = () => (\r\n  <Container>\r\n    <Row>\r\n      <Col className=\"content-panels\" style={{ marginRight: \"10px\" }}>\r\n        <div>\r\n          <h4>What is this?</h4>\r\n          <p>\r\n            A webpage with a collection of assorted tools related to the Monster Hunter series.\r\n            </p>\r\n          <p>\r\n            At the moment the page is incomplete, but there's a filter page\r\n            that let's you find the location of a skill from the decoration\r\n            filter page. An armor set searcher is also planned to be\r\n            implemented.\r\n            </p>\r\n        </div>\r\n      </Col>\r\n      <Col className=\"content-panels\" style={{ marginLeft: \"10px\" }}>\r\n        <div>\r\n          <h4>Other</h4>\r\n          <p>Other websites you might want to check out:</p>\r\n          <div style={{ display: \"grid\" }}>\r\n            <a href=\"https://mhworld.kiranico.com/\">\r\n              https://mhworld.kiranico.com/</a>\r\n            <a href=\"https://mhw.wiki-db.com/sim/?hl=en\">\r\n              https://mhw.wiki-db.com/sim/?hl=en</a>\r\n            <a href=\"https://mhwleaderboards.com/\">\r\n              https://mhwleaderboards.com/</a>\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nconst About = () => (\r\n  <Container>\r\n    <Col>\r\n      <h2>\r\n        About:\r\n    </h2>\r\n      <p>Source code for this page is here: <a href=\"https://github.com/yb00/mh-things\">\r\n        https://github.com/yb00/mh-things\r\n      </a></p>\r\n\r\n    </Col>\r\n  </Container>\r\n);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { apiResponse: \"\" };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Navbar />\r\n        <Main />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}